{
  "name": "Hacathon final",
  "nodes": [
    {
      "parameters": {
        "public": true,
        "initialMessages": "Hi. I am FinBuddy ready to assist you",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -992,
        64
      ],
      "id": "b05f8f36-0642-4ec0-867b-681c865ffc6f",
      "name": "When chat message received",
      "webhookId": "2fe51813-ac15-4fad-bd8d-ba3f268a6286"
    },
    {
      "parameters": {
        "functionCode": "const sessionId = $json.sessionId || \"default-session\";\nconst userMessage = $json.chatInput?.toLowerCase() || \"\";\n\nreturn [{\njson: {\nroute: userMessage.includes(\"loan\") || userMessage.includes(\"mudra\") ? \"mudra\" : \"content\",\nchatInput: userMessage,\n  sessionId\n}\n}];"
      },
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -624,
        64
      ],
      "id": "eefcb39d-45f7-4aa4-a7fb-bd215b1501ad",
      "name": "Decide Route"
    },
    {
      "parameters": {
        "functionCode": "const sessionId = $json.sessionId || \"default-session\";\nconst module = $json[\"module\"] || \"Budget Planner\";\nconst prompt = ` You are a friendly financial advisor helping small business owners across India understand which government loan schemes they may be eligible for. Please explain everything in simple, clear, and polite language. If the user speaks a regional Indian language (like Hindi, Marathi, Tamil, Bengali, etc.), respond in that language.\n\nThe business owner has shared the following details:\n\n- Business Type: Grocery Store\n- Annual Income: ₹5,00,000\n- Years in Business: 2\n- Sector: Retail\n- Collateral: No\n\nBased on this profile, suggest the 2 or 3 most suitable government loan schemes — such as PMMY (Pradhan Mantri Mudra Yojana), Stand-Up India, or CGTMSE.\n\nFor each scheme, explain:\n- Why this scheme is suitable for the business\n- The loan amount range\n- Who is eligible\n- How to apply in very simple terms\n\nPlease avoid technical jargon. Your response should be clear enough for someone who has never applied for a loan before.\n\n`;\n\nreturn [{ json: { chatInput: prompt , sessionId} }];"
      },
      "id": "bb68c04c-5f1d-437f-b90e-421a183ceb35",
      "name": "Prepare Prompt",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        80,
        0
      ]
    },
    {
      "parameters": {
        "functionCode": "const sessionId = $json.sessionId || \"default-session\";\nconst module = $json[\"module\"] || \"Budget Planner\";\nconst prompt = `Continue the conversation based on previous messages. If this is a new session, You are FinBuddy, an AI assistant built to help small-town and rural users in India apply for PMMY (Pradhan Mantri Mudra Yojana) loans.\n\nThe user may speak in English, Hindi, Gujarati or Marathi. Detect the language and respond in the same language.\n\nStep 1: Understand the user's background\nAsk simple and polite questions to gather these details:\n- Name\n- Village/town, district, and state\n- Type of business or work (e.g. tailoring, dairy, kirana shop, service, trading, welding, etc.)\n- Daily or monthly income or wages\n- Whether they already run a business or are starting one\n- Mobile number\n- Aadhaar number (optional)\n\nStep 2: Based on income and business maturity, decide the PMMY loan category:\n- Shishu (for new businesses, up to ₹50,000)\n- Kishore (for growing businesses, ₹50,001 to ₹5 lakh)\n- Tarun (for established businesses, ₹5 lakh to ₹10 lakh)\n\nExplain the benefits of their matching category in their language (Marathi, Hindi, or English).\n\nStep 3: Generate a JSON object for their application draft:\n{\n  \"name\": \"\",\n  \"location\": \"\",\n  \"business_type\": \"\",\n  \"income\": \"\",\n  \"loan_category\": \"Shishu / Kishore / Tarun\",\n  \"loan_amount_requested\": \"\",\n  \"mobile\": \"\",\n  \"aadhaar_number\": \"\"\n}\n\nOnly return the JSON and category name after all information is collected.\nKeep it friendly and local – like you're talking to a neighbor.`;\n\nreturn [{ json: { chatInput: prompt , sessionId} }];"
      },
      "id": "fd7b45a3-5a36-48c4-a61d-8f632da8d441",
      "name": "Prepare Prompt1",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        48,
        288
      ],
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        528,
        32
      ],
      "id": "51c1679a-9fe8-4921-9871-ae698b4b154a",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "respondWith": "text",
        "options": {}
      },
      "id": "a7717b4f-a533-40e3-8ee7-2e57f98c22fc",
      "name": "Respond to Chat",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1104,
        112
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        448,
        320
      ],
      "id": "0830834b-f0c1-4a48-b8de-16c236ce456c",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "Syv1y5XtNrNWKTA5",
          "name": "Google Gemini(PaLM) Api account 2"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        736,
        320
      ],
      "id": "75bdccd2-980b-4ad5-8d5a-c19528b2cfdc",
      "name": "Calculator"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4906c2c6-cf2c-4f22-83f0-07451d635ef6",
              "leftValue": "={{ $json.route }}",
              "rightValue": "mudra",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -448,
        64
      ],
      "id": "0d5c18d6-847a-4537-9bc6-4dc796ce6864",
      "name": "If"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        592,
        592
      ],
      "id": "770cec5a-973a-4de6-9ab4-f5c55a71659c",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "qWDmZLGBKkw41A18",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        432,
        -368
      ],
      "id": "2a4cf4b3-255f-47c7-8675-69ec5125407c",
      "name": "AI Agent1"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        496,
        -128
      ],
      "id": "af5aff65-7361-4c0c-b24f-edffeef279be",
      "name": "Postgres Chat Memory1",
      "credentials": {
        "postgres": {
          "id": "qWDmZLGBKkw41A18",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "text",
        "options": {}
      },
      "id": "b5dfb055-d38f-4583-9da7-68b94ae877ec",
      "name": "Respond to Chat1",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        896,
        -208
      ]
    },
    {
      "parameters": {
        "model": "llama3.2:1b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        368,
        -128
      ],
      "id": "ee77c0b7-a1ff-48eb-a443-6f581694eb0e",
      "name": "Ollama Chat Model",
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        608,
        -112
      ],
      "id": "f1e9b10c-e48b-456c-9e83-e643b5ec2b34",
      "name": "Calculator1"
    }
  ],
  "pinData": {
    "Prepare Prompt1": [
      {
        "json": {
          "chatInput": "Continue the conversation based on previous messages. If this is a new session, You are FinBuddy, an AI assistant built to help small-town and rural users in India apply for PMMY (Pradhan Mantri Mudra Yojana) loans.\n\nThe user may speak in English, Hindi, Gujarati or Marathi. Detect the language and respond in the same language.\n\nStep 1: Understand the user's background\nAsk simple and polite questions to gather these details:\n- Name\n- Village/town, district, and state\n- Type of business or work (e.g. tailoring, dairy, kirana shop, service, trading, welding, etc.)\n- Daily or monthly income or wages\n- Whether they already run a business or are starting one\n- Mobile number\n- Aadhaar number (optional)\n\nStep 2: Based on income and business maturity, decide the PMMY loan category:\n- Shishu (for new businesses, up to ₹50,000)\n- Kishore (for growing businesses, ₹50,001 to ₹5 lakh)\n- Tarun (for established businesses, ₹5 lakh to ₹10 lakh)\n\nExplain the benefits of their matching category in their language (Marathi, Hindi, or English).\n\nStep 3: Generate a JSON object for their application draft:\n{\n  \"name\": \"\",\n  \"location\": \"\",\n  \"business_type\": \"\",\n  \"income\": \"\",\n  \"loan_category\": \"Shishu / Kishore / Tarun\",\n  \"loan_amount_requested\": \"\",\n  \"mobile\": \"\",\n  \"aadhaar_number\": \"\"\n}\n\nOnly return the JSON and category name after all information is collected.\nKeep it friendly and local – like you're talking to a neighbor.",
          "sessionId": "2f497089938d49ebb81bf5d122b57c9c"
        }
      }
    ]
  },
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Decide Route",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Decide Route": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Prompt": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Prompt1": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Respond to Chat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Prepare Prompt1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Prepare Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Chat": {
      "main": [
        []
      ]
    },
    "Postgres Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Respond to Chat1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Calculator1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "759c3305-e827-463a-85bf-d548939168a4",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "558d88703fb65b2d0e44613bc35916258b0f0bf983c5d4730c00c424b77ca36a"
  },
  "id": "F4Bk4qJD3jUj8CFR",
  "tags": []
}
